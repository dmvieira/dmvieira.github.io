<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Diogo Munaro Vieira</title><link href="http://diogomunaro.com/" rel="alternate"></link><link href="http://diogomunaro.com/feeds/all.atom.xml" rel="self"></link><id>http://diogomunaro.com/</id><updated>2016-03-06T14:27:00-03:00</updated><entry><title>MVP mind in consumer society</title><link href="http://diogomunaro.com/mvp-mind-in-consumer-society.html" rel="alternate"></link><updated>2016-03-06T14:27:00-03:00</updated><author><name>Diogo Munaro</name></author><id>tag:diogomunaro.com,2016-03-06:mvp-mind-in-consumer-society.html</id><summary type="html">
      &lt;img src="/images/consumer-society.gif" alt="consumer" width="300" /&gt;

      &lt;p&gt;
        It's so difficult to resist for consumer temptations... I'm not a consumer guy,
        but capitalist society and its 'consumer guide' show you a lot of possibilities
        and you always need more and more useless stuff.
      &lt;/p&gt;
      &lt;p&gt;
        Now let me think about entrepreneurship... When you start your business people say:
      &lt;/p&gt;
      &lt;p&gt;
        &lt;blockquote&gt;- Go and make your Minimum Viable Product (MVP)&lt;/blockquote&gt;
      &lt;/p&gt;
      &lt;p&gt;
        Yes, we know that! But what is that "M"? What is really the minimum? I can see some
        people that can't see that minimum... And when we talk about real minimum they say:
      &lt;/p&gt;
      &lt;p&gt;
        &lt;blockquote&gt;- Oh! But my clients will not like it&lt;/blockquote&gt;
        &lt;blockquote&gt;- It's a very bad product... Nobody want it&lt;/blockquote&gt;
      &lt;/p&gt;
      &lt;p&gt;
        So, your clients have a problem that your product should solve.
        They will have the same problem until a good solver appear.
        How do you know if your solver is really the best? It needs to be tested
        step by step giving just the essential part for each test. But it is
        soooo difficult to get this essential part. It's not people fault!
        Our society teaches them to always get more and more!! Just remember: Less is more!
      &lt;/p&gt;

      &lt;img src="/images/keep-calm-because-less-is-more-2.png" alt="keep calm because less is more" width="285" height="300" /&gt;
      &lt;/p&gt;
      &lt;p&gt;
        I did a trick, I think in my MVPs as choosing clothes for go out. How many clothes I really need to go a party?
        We will make clothes to go that party? Of course not! We have a lot of them inside our wardrobe...
        That's it! We don't need to create a new thing to test our product...
        Our MVP don't need thousands of features just to prove we are right, as well as we don't need a
        lot of stuffs to be happy.
      &lt;/p&gt;

      &lt;img src="/images/bstn325l.jpg" alt="why a lot?" width="283" height="300" /&gt;
      &lt;p&gt;
        Now going to "V" of MVP, let's think what's really valuable.
        People buy things all the time! Again we can see how hard is determine what is really valuable.
        Some guys still think that your cars, watches and boats are more important than family, honor and respect.
        It is strong for these guys to understand what is really valuable to them, even for their customers!
      &lt;/p&gt;
      &lt;p&gt;
        Human values are changed in some guys and it is very hard to make them understand the real product
        ("P") that customers need. The best MVPs don't need new inventions, just creativity
        (&lt;a title="Examples" href="http://www.hackerchick.com/2013/02/5-mvp-examples.html" target="_blank"&gt;Here&lt;/a&gt; some good examples).
        Actually, for every new feature you should test it with some new MVPs and make your product with their results.
        It is applicable to consumer society too... You don't need all that products!
        Before buy them, try to test and think if you really want that products.
      &lt;/p&gt;
      &lt;img src="/images/mvp.jpg" alt="mvp flow" width="296" height="174" /&gt;
      &lt;p&gt;
        Now let's think a bit more how our education and attitudes in society impact our carrier.
        Sometimes we forget that the society act directly in our lifes and how our lifestyle can
        simplify or complicate entrepreneurship carrier. It is not about the money (Jessie J.),
        it's about to make the word a better place. If we think like this, we are on the right path.
      &lt;/p&gt;
    </summary><category term="mvp"></category><category term="consumer"></category><category term="entrepreneurship"></category><category term="startup"></category></entry><entry><title>MVP (minimal viable product) for tests or tests for MVPs</title><link href="http://diogomunaro.com/mvp-minimal-viable-product-for-tests-or-tests-for-mvps.html" rel="alternate"></link><updated>2015-03-06T17:27:00-03:00</updated><author><name>Diogo Munaro</name></author><id>tag:diogomunaro.com,2015-03-06:mvp-minimal-viable-product-for-tests-or-tests-for-mvps.html</id><summary type="html">
        &lt;h3&gt;
            What's MVP?
        &lt;/h3&gt;
        &lt;p&gt;
            MVP definition is &lt;i&gt;Minimal Viable Product&lt;/i&gt; and it's basically a simple way to test your new product
            without really make this product. You can read more about StartUps and MVPs in my post at
            &lt;a href="/mvp-mind-in-consumer-society.html" target="_blank"&gt;my new post&lt;/a&gt;.
        &lt;/p&gt;
        &lt;p&gt;
            MVPs are common in StartUps, because they are testing something new, but it's applicable for
            big companies too when they are trying to launch a new feature or improve UX (user experience) for a
            product. Here is a video that shows it better:
        &lt;/p&gt;
        &lt;iframe width="560" height="315" src="https://www.youtube.com/embed/FvGJDKdI2GI" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;
        &lt;br&gt;
        &lt;br&gt;
        &lt;h3&gt;
            MVP for tests. The simple way to test your idea.
        &lt;/h3&gt;
        &lt;p&gt;
            Let you as an entrepreneurship in your StartUp and you really don't know if your product will
            be accepted or people will like it. So, you can do your MVP (a simple web page or a YouTube
            video, etc). Doing it, you can receive feedbacks and improve your MVP. This is the point...
            Improve your MVP...
        &lt;/p&gt;
        &lt;p&gt;
            Now you just have a simple system that users can use basic functions and you want to know
            if users are liking and if they aren't getting in trouble with some feature. With these feedbacks
            your system is growing... But when should I test my MVP?
        &lt;/p&gt;
        &lt;h3&gt;
            Tests for MVP. Make your judgment...
        &lt;/h3&gt;
        &lt;p&gt;
            Here the question should be: "When is it not a MVP yet?". You need to realize when your software
            is with enough features that need test, and if these features will be permanent or are just testing
            features that users should never use.
        &lt;/p&gt;
        &lt;p&gt;
            More conservative programmers will hate me for that opinion, but when you are innovating, as much
            time you spend with bad ideas as much you lost time with new great ideas, because every new idea will fail,
            at least in one feature. Make your choice! It can determine a lot of things...
        &lt;/p&gt;
        &lt;img alt="success and fail" src="/images/suc_fail.jpg" /&gt;
        &lt;h3&gt;
            I'm not a MVP yet! Help me to test!!
        &lt;/h3&gt;
        &lt;p&gt;
            Congrats! Your idea, and you software now are growing and you really need tests. Now you should
            decide better tests for your software and perhaps use TDD (Test Driven Development). Here is a list of popular test types and a summarized
            description:
        &lt;ul&gt;
            &lt;li&gt;
                &lt;strong&gt;Unit Tests:&lt;/strong&gt; Test each fragment of your code. E.g.: test each function individually.
            &lt;/li&gt;
            &lt;li&gt;
                &lt;strong&gt;Integration Tests:&lt;/strong&gt; Test integration between parts of your code. E.g.: if a module works with another.
            &lt;/li&gt;
            &lt;li&gt;
                &lt;strong&gt;System Tests:&lt;/strong&gt; Test your entire code usability. E.g.: if your entire new feature works as expected.
            &lt;/li&gt;
            &lt;li&gt;
                &lt;strong&gt;Interface Tests:&lt;/strong&gt; Test your user interface. E.g.: if your interface isn't with bugs to user.
            &lt;/li&gt;
            &lt;li&gt;
                &lt;strong&gt;Differential Tests:&lt;/strong&gt; Test if a feature is better than older version of this feature. E.g.: if a feature is faster then older.
            &lt;/li&gt;
            &lt;li&gt;
                &lt;strong&gt;Stress Tests:&lt;/strong&gt; Test if part or all code is stable. E.g.: how many requests a server support.
            &lt;/li&gt;
            &lt;li&gt;
                &lt;strong&gt;Random Tests:&lt;/strong&gt; Test with random inputs part of the code. E.g.: try a lot of random inputs in a function.
            &lt;/li&gt;
        &lt;/ul&gt;
        &lt;p&gt;
            Python have some libraries that help with these tests:
            &lt;a href="https://pypi.python.org/pypi/unittest2" target="_blank"&gt;unittest2&lt;/a&gt;,
            &lt;a href="https://pypi.python.org/pypi/nose" target="_blank"&gt;nose&lt;/a&gt;,
            &lt;a href="https://pypi.python.org/pypi/pytest" target="_blank"&gt;pytest&lt;/a&gt;. With then you can apply these
            tests and later can use
            &lt;a href="https://pypi.python.org/pypi/coverage" target="_blank"&gt;coverage&lt;/a&gt; to determine how many of your code is already tested.
        &lt;/p&gt;
        &lt;p&gt;
            There are a lot of coverage types, and you can learn more about tests and coverage in this amazing
            &lt;a href="https://www.udacity.com/course/cs258" target="_blank"&gt;Free Course&lt;/a&gt;.
        &lt;/p&gt;
    </summary><category term="test"></category><category term="python"></category><category term="unit test"></category><category term="integration test"></category><category term="interface test"></category><category term="system test"></category><category term="differential test"></category><category term="stress test"></category><category term="random test"></category><category term="mvp"></category><category term="startup"></category><category term="tdd"></category></entry><entry><title>Changing dynamically Pentaho report's, transformation's and job's databases using Python</title><link href="http://diogomunaro.com/changing-dynamically-pentaho-reports-transformations-and-jobs-databases-using-python.html" rel="alternate"></link><updated>2015-02-20T17:27:00-02:00</updated><author><name>Diogo Munaro</name></author><id>tag:diogomunaro.com,2015-02-20:changing-dynamically-pentaho-reports-transformations-and-jobs-databases-using-python.html</id><summary type="html">
        &lt;h3&gt;
            &lt;a target="_blank" href="http://www.pentaho.com/"&gt;Pentaho&lt;/a&gt;, the best BI (business intelligence) tool
        &lt;/h3&gt;
        &lt;p&gt;
            &lt;a target="_blank" href="http://www.pentaho.com/"&gt;Pentaho&lt;/a&gt; is a great open source drag and drop tool for
            automated process but include some repeated jobs when you're
            creating these automated processes.
        &lt;/p&gt;
        &lt;p&gt;
            It enables you to create tasks called transformations and group these tasks in jobs with a tool
            called PDI (Pentaho Data Integration).
            In addition, you can use a tool called Report Designer to make some reports based in data sources.
        &lt;/p&gt;
        &lt;p&gt;
            &lt;a target="_blank" href="http://www.pentaho.com/"&gt;Pentaho&lt;/a&gt; is really beautiful and help too much some tasks
            and ETL (extract, transform and load) processes, but
            when you need to change database for these transformations, jobs and reports is really difficult! You must open
            each of them and change database by hand! As follows:
        &lt;/p&gt;
        &lt;img alt="Pentaho Change Database" src="/images/pentaho_database.jpg" /&gt;
        &lt;p&gt;
            Now, lets imagine change by hand connections for each &lt;a target="_blank" href="http://www.pentaho.com/"&gt;Pentaho&lt;/a&gt; Job like this:
        &lt;/p&gt;
        &lt;img alt="Pentaho Job" src="/images/pentaho_jobs.png" /&gt;
        &lt;p&gt;
            With a lot of transformations like this:
        &lt;/p&gt;
        &lt;img alt="Pentaho Transformations" src="/images/pentaho_transformations.png" /&gt;
        &lt;h3&gt;
            Avoiding 'Click and Change' &lt;a target="_blank" href="http://www.pentaho.com/"&gt;Pentaho&lt;/a&gt; repeated jobs
        &lt;/h3&gt;
        &lt;p&gt;
            Programmers (and I think all people) hate repeated jobs (or should hate). These jobs are really boring
            and nobody should do these things. Automated processes improve company performance and enrich your
            employees skills.
        &lt;/p&gt;
        &lt;p&gt;
            Not only companies need automated process. Smart houses, cars and cities are here to make sure that
            people don't need to do some repeated tasks like turn off lights or detect cars crashes.
        &lt;/p&gt;
        &lt;p&gt;
            Smart things are getting up new innovations and for company process we have some tools as
            &lt;a target="_blank" href="http://www.bonitasoft.com/"&gt;BonitaBPM&lt;/a&gt; for organize processes and
            &lt;a target="_blank" href="http://www.pentaho.com/"&gt;Pentaho&lt;/a&gt; for automate them, but who helps
            programmers to automate processes with &lt;a target="_blank" href="http://www.pentaho.com/"&gt;Pentaho&lt;/a&gt;?
        &lt;/p&gt;
        &lt;p&gt;
            To take care of this, &lt;a target="_blank" href="https://github.com/kappius/"&gt;Kappius Company Team&lt;/a&gt; did
            &lt;a target="_blank" href="https://github.com/kappius/pentaho-db-changer"&gt;Pentaho DB Changer&lt;/a&gt; that can
            change dynamically database connections for transformations, jobs and reports from &lt;a target="_blank" href="http://www.pentaho.com/"&gt;Pentaho&lt;/a&gt;.
        &lt;/p&gt;
        &lt;p&gt;
            With &lt;a target="_blank" href="https://github.com/kappius/pentaho-db-changer"&gt;Pentaho DB Changer&lt;/a&gt; you can change
            XML files with extensions: .ktr (transformations), .kjb (jobs) and .xml (reports), but for reports you need to unzip
            .prpt file and change datasources\sql-ds.xml file. Here is sections that XML file should have to
            &lt;a target="_blank" href="https://github.com/kappius/pentaho-db-changer"&gt;Pentaho DB Changer&lt;/a&gt; works:
        &lt;/p&gt;
        &lt;img alt="KTR example file" src="/images/ktr_pentaho.png" /&gt;
        &lt;p&gt;
            To avoid &lt;a target="_blank" href="http://www.pentaho.com/"&gt;Pentaho&lt;/a&gt; code
            changes and simplify future code compatibility with
            &lt;a target="_blank" href="https://github.com/kappius/pentaho-db-changer"&gt;Pentaho DB Changer&lt;/a&gt;
            we designed &lt;a target="_blank" href="https://github.com/kappius/pentaho-db-changer"&gt;Pentaho DB Changer&lt;/a&gt;
            with a decoupled approach that can be used as a Python module instead of just executed.
        &lt;/p&gt;
    </summary><category term="pentaho"></category><category term="python"></category><category term="java"></category><category term="databases"></category><category term="report design"></category><category term="pdi"></category></entry><entry><title>Programmers, please know how to read and write</title><link href="http://diogomunaro.com/programmers-please-know-how-to-read-and-write.html" rel="alternate"></link><updated>2015-02-06T17:27:00-02:00</updated><author><name>Diogo Munaro</name></author><id>tag:diogomunaro.com,2015-02-06:programmers-please-know-how-to-read-and-write.html</id><summary type="html">
        &lt;h3&gt;
            Programmers reading and writing instead of coding?
        &lt;/h3&gt;
        &lt;p&gt;
            Yeah guys, we need to know how to write! I'm Brazilian, and I listen from some of
            friends of mine:

        &lt;/p&gt;
        &lt;blockquote&gt;
            Wow, I'm a programmer! I do some code and I don't need
            to know how to write in portuguese!
        &lt;/blockquote&gt;
        &lt;p&gt;
            Ok, let's imagine that you're coding for a brazilian company and you need to comment
            some code for your colleagues. Or even if you need to write an email to your manager.
            I don't know what your manager will think about it, but it's a fair skill for your
            promotion...
        &lt;/p&gt;
        &lt;p&gt;
            If that guy don't mind about writing in portuguese, imagine in english! If you want a
            better job or submit a paper for scientific area with your results or new implementation
            you must write in english!
        &lt;/p&gt;
        &lt;h3&gt;
            I understood about a better job, but write a paper?
        &lt;/h3&gt;
        &lt;p&gt;
            Everyone can write a paper with innovations for scientific community. But I think
            this is not the question here... Programmers can do fantastic things because they
            know how to make ideas come true with coding!
        &lt;/p&gt;
        &lt;p&gt;
            If you think that you have a good idea look inside &lt;a target="_blank" href="https://scholar.google.com"&gt;Google Scholar&lt;/a&gt;
            if someone made this idea yet. If not go and build! There are a lot of conferences that you
            can submit your paper. You will get a lot of pride and recognition in community.
        &lt;/p&gt;
        &lt;h3&gt;
            And read? For what?
        &lt;/h3&gt;
        &lt;p&gt;
            The more you read, the more you write better... Simple as that... But please, read good references!
            Facebook and Twitter sometimes have a lot of errors and typos, so be careful and use
            &lt;a target="_blank" href="https://scholar.google.com"&gt;Google Scholar&lt;/a&gt; as much as you can.
        &lt;/p&gt;
        &lt;h3&gt;
            My own story...
        &lt;/h3&gt;
        &lt;p&gt;
            Nowadays I submitted a paper to &lt;a target="_blank" href="http://icc2015.ieee-icc.org/"&gt;IEEE ICC&lt;/a&gt;
            (International Conference On Communications) that is a great conference in the Great Britain!
            My paper is "Content Recommendation and Service Costs in Swarming Systems" that I did in MSc about
            how Recommendation Systems can improve QoE (Quality of Experience) in VoD (Video over Demand) and live
            streaming over P2P (peer-to-peer) scenarios.
        &lt;/p&gt;
        &lt;p&gt;
            This conference want to make word smarter and my paper try to make content delivery smarter, so it's
            matching! When you search for a conference or a journal to submit your paper, before get in mind if
            your work is good for that conference. If it matches don't be afraid! Go and submit it!!
        &lt;/p&gt;
    </summary><category term="programmer"></category><category term="icc"></category><category term="ieee"></category><category term="write"></category><category term="paper"></category></entry><entry><title>Using Pelican, Github, Parse, Sendgrid and Disqus to make your free website.</title><link href="http://diogomunaro.com/using-pelican-github-parse-sendgrid-and-disqus-to-make-your-free-website.html" rel="alternate"></link><updated>2015-01-23T17:27:00-02:00</updated><author><name>Diogo Munaro</name></author><id>tag:diogomunaro.com,2015-01-23:using-pelican-github-parse-sendgrid-and-disqus-to-make-your-free-website.html</id><summary type="html">
        &lt;h3&gt;
            What?? My free website?
        &lt;/h3&gt;
        &lt;p&gt;
            Yeah! You don't need to pay for a simple website or for your portfolio. I
            did this website totally free (I just need to pay about 10 dollars
            yearly for my domain).
        &lt;/p&gt;
        &lt;p&gt;
            It's really strange because people (mainly IT people) love databases
            and dynamic content with a lot of complexity. So, I'm here to change
            your mind. SOMETIMES YOU DON'T NEED COMPLEXITY IN YOU LIFE! Databases and
            dynamic content are really powerful tools, but they allow some bugs
            and concerns that you don't want when you are building a simple website.
        &lt;/p&gt;
        &lt;h3&gt;
            Going back to your caves.
        &lt;/h3&gt;
        &lt;img alt="Caveman" src="/images/caveman.jpg" /&gt;
        &lt;p&gt;
            What you will see right now is a transgression to all technology
            enforces and a new way of seeing this technology.
        &lt;/p&gt;
        &lt;p&gt;
            When you make your personal blog or website with a tool like
            &lt;a target="_blank" href="https://wordpress.org/"&gt;Wordpress&lt;/a&gt;, you
            are saying to the world: "I need to spend money!".
            &lt;a target="_blank" href="https://wordpress.org/"&gt;Wordpress&lt;/a&gt; is an
            amazing tool, but using it to make your personal blog is like kill an
            ant with a bazooka. You're using 0.1% of &lt;a target="_blank" href="https://wordpress.org/"&gt;Wordpress&lt;/a&gt;
            and you did a giant infrastructure for it.
        &lt;/p&gt;
        &lt;p&gt;
            Let's compare it with
            &lt;a target="_blank" href="https://pages.github.com/"&gt;Github Pages&lt;/a&gt;.
            &lt;a target="_blank" href="https://pages.github.com/"&gt;Github Pages&lt;/a&gt; is a
            service of &lt;a target="_blank" href="https://github.com/"&gt;Github&lt;/a&gt; where
            you can host static pages for your projects, for you and for your organizations for free.
            Every developer should open an account at &lt;a target="_blank" href="https://github.com/"&gt;Github&lt;/a&gt;
            because it's a spectacular collaboration environment.
            &lt;a target="_blank" href="https://help.github.com/categories/github-pages-basics/"&gt;Here&lt;/a&gt; is a tutorial to
            put your domain linked to &lt;a target="_blank" href="https://pages.github.com/"&gt;Github Pages&lt;/a&gt;.
        &lt;/p&gt;
        &lt;p&gt;
            Ok, ok, I can host a static page, but... I need a blog, and contact form.
            How can I do that? So, if you think, every dynamic page displays static pages
            dynamically. Static pages were "Rock Stars" twenty years ago and now
            people don't mind them... I'll try to convince you that static pages
            are cool!
        &lt;/p&gt;
        &lt;h3&gt;
            Doing your "Rock Star" static page website
        &lt;/h3&gt;
        &lt;p&gt;
            What do you want in your page? I can describe some essential items:
        &lt;/p&gt;
        &lt;ul&gt;
            &lt;li&gt;
                Static pages (About, Projects, ...)
            &lt;/li&gt;
            &lt;li&gt;
                Blog feature, where I can post and people can comment
            &lt;/li&gt;
            &lt;li&gt;
                Contact Form
            &lt;/li&gt;
        &lt;/ul&gt;
        &lt;h4&gt;
            Static Pages
        &lt;/h4&gt;
        &lt;p&gt;
            Do I really need to explain it? Just do static pages and publish them!
        &lt;/p&gt;
        &lt;h4&gt;
            Blog
        &lt;/h4&gt;
        &lt;p&gt;
            Now the best tool ever! &lt;a target="_blank" href="https://pages.github.com/"&gt;Github Pages&lt;/a&gt;
            recommends &lt;a target="_blank" href="http://jekyllrb.com/"&gt;Jekyll&lt;/a&gt;, but I'm a
            Pythonist (who loves Python) and I'm doing my website with a similar (I think it better) tool
            called &lt;a target="_blank" href="http://blog.getpelican.com/"&gt;Pelican&lt;/a&gt;!
        &lt;/p&gt;
        &lt;p&gt;
            With these tools you can build a static website with configuration files
            and with Python power to generate these sites! With &lt;a target="_blank" href="http://blog.getpelican.com/"&gt;Pelican&lt;/a&gt;
            you can do a blog!! Yeah, a simple blog that you can write using
            reStructuredText, Markdown, AsciiDoc formats or HTML. I'll not show how
            to work with &lt;a target="_blank" href="http://blog.getpelican.com/"&gt;Pelican&lt;/a&gt;, but
            there are some good pages that explain it:
            &lt;a target="_blank" href="http://fjavieralba.com/pelican-a-static-blog-generator-for-pythonistas.html"&gt;here&lt;/a&gt;,
            &lt;a target="_blank" href="http://hackercodex.com/guide/pelican-static-site-generator-install/"&gt;here&lt;/a&gt; and
            &lt;a target="_blank" href="http://docs.getpelican.com/en/latest/quickstart.html"&gt;here&lt;/a&gt;.
        &lt;/p&gt;
        &lt;h5&gt;Ok, ok, and my blog comments?&lt;/h5&gt;
        &lt;p&gt;
            &lt;a target="_blank" href="http://blog.getpelican.com/"&gt;Pelican&lt;/a&gt; have a lot of
            &lt;a target="_blank" href="https://github.com/getpelican/pelican-plugins"&gt;plugins&lt;/a&gt;, and
            you can handle &lt;a target="_blank" href="https://github.com/getpelican/pelican-plugins/tree/master/static_comments"&gt;static comments&lt;/a&gt;
            or use &lt;a target="_blank" href="https://disqus.com/"&gt;Disqus&lt;/a&gt;. &lt;a target="_blank" href="https://disqus.com/"&gt;Disqus&lt;/a&gt; is
            a community of comments and you can get more information about people that comment in your website.
            For the most of cases it's free and &lt;a target="_blank" href="http://blog.getpelican.com/"&gt;Pelican&lt;/a&gt;
            support integration with it, as explained in this &lt;a target="_blank" href="http://querbalken.net/howto-setup-comments-with-disqus-in-pelican-en.html"&gt;post&lt;/a&gt;.
        &lt;/p&gt;
        &lt;h4&gt;
            Contact Form and everything dynamic that you need...
        &lt;/h4&gt;
        &lt;p&gt;
            No, I'm not crazy... Not yet... I'm talking about dynamic things in static pages...
        &lt;/p&gt;
        &lt;p&gt;
            Now your website will send emails from contact form (and can do every
            dynamic things that your need) using
            &lt;a target="_blank" href="https://parse.com/"&gt;Parse&lt;/a&gt;. You can do almost
            everything that you do in your dynamic server using &lt;a target="_blank" href="https://parse.com/"&gt;Parse&lt;/a&gt;.
        &lt;/p&gt;
        &lt;p&gt;
            &lt;a target="_blank" href="https://parse.com/"&gt;Parse&lt;/a&gt; is like a server-side for you!
            You configure a script for server side and make requests for that script.
            If you use more than 30 requests per second, than you will pay. Yes, you deserve
            pay if you do that! With my contact form I receive less than one email per year,
            so I should never pay...
        &lt;/p&gt;
        &lt;p&gt; Then you will think... Ohhh, but I need to learn one more tool... Not really,
            because &lt;a target="_blank" href="https://sendgrid.com/"&gt;SendGrid&lt;/a&gt; is another
            amazing tool that take care of everything to you! &lt;a target="_blank" href="https://sendgrid.com/"&gt;SendGrid&lt;/a&gt;
            sends optimized emails and store information about receipts, links clicked and you can
            make templates and email lists. Yes, a good tool with a great &lt;a target="_blank" href="https://sendgrid.com/blog/send-email-static-websites-using-parse/"&gt;tutorial&lt;/a&gt;
            that your REALLY just need to copy and paste to integrate with &lt;a target="_blank" href="https://parse.com/"&gt;Parse&lt;/a&gt; and use in
            your contact form.
        &lt;/p&gt;
        &lt;h3&gt;
            Final Remarks
        &lt;/h3&gt;
        &lt;p&gt;
            I hope that I was able to convince you about the power of static pages right now.
            Nowadays we have a lot of tools and integrations that we just need to join these tools
            and make a simpler thing. Here we show how to do a static website and host these
            pages without cost. If you want to see some website implemented using these
            technologies you can view my site &lt;a target="_blank" href="https://github.com/dmvieira/dmvieira.github.io"&gt;source code&lt;/a&gt;.
        &lt;/p&gt;
        &lt;p&gt;
            PS: Now your website is with automatic deploy and with version control because you're using GIT!! ;)
        &lt;/p&gt;
    </summary><category term="pelican"></category><category term="github"></category><category term="sendgrid"></category><category term="disqus"></category><category term="website"></category><category term="python"></category><category term="parse"></category><category term="free"></category><category term="tutorial"></category></entry><entry><title>Using PyHeaderFile to handle sheets</title><link href="http://diogomunaro.com/using-pyheaderfile-to-handle-sheets.html" rel="alternate"></link><updated>2015-01-09T17:27:00-02:00</updated><author><name>Diogo Munaro</name></author><id>tag:diogomunaro.com,2015-01-09:using-pyheaderfile-to-handle-sheets.html</id><summary type="html">
        &lt;h3&gt;
            Why working with Spreadsheets?
        &lt;/h3&gt;
        &lt;p&gt;
            Spreadsheets are a 'proxy' between users and developers. With them,
            users can input data and organize things then send as input to
            systems, while programmers can handle these sheets and import or
            export from database for users.
        &lt;/p&gt;
        &lt;p&gt;
            Some good ways for users to handle spreadsheets are using Excel,
            Libreoffice, Google Drive and others. For the user is really simple
            to open a lot of formats and different extensions because these
            programs already do all hard work, but nobody take care of programmers
            (specially Python programmers)...
            We need to use a lot of difficult modules and find a way to read every
            strange spreadsheet format.
        &lt;/p&gt;
        &lt;h3&gt;
            Why Python programmers can relax right now.
        &lt;/h3&gt;
        &lt;p&gt;
            Yes, now Python community earned a module called
            &lt;a target="_blank" href="https://pypi.python.org/pypi/pyheaderfile"&gt;PyHeaderFile&lt;/a&gt;!
            PyHeaderFile is an interface to handle sheets. No, not spreadsheets, but only
            sheets. Example of libreoffice sheet:
        &lt;/p&gt;

            &lt;img alt="libreoffice sheet" src="/images/sheet.png" /&gt;
        &lt;h3&gt;
            But why Sheets?
        &lt;/h3&gt;
        &lt;p&gt;
            Sheets are beautiful! Spreadsheets are ugly... Spreadsheets add a lot of complexity
            when we handle it using &lt;a target="_blank" href="https://pypi.python.org/pypi/xlrd"&gt;Xlrd&lt;/a&gt;,
            &lt;a target="_blank" href="https://pypi.python.org/pypi/xlwt"&gt;Xlwt&lt;/a&gt;,
            &lt;a target="_blank" href="https://pypi.python.org/pypi/openpyxl"&gt;Openpyxl&lt;/a&gt;,
            &lt;a href="http://pandas.pydata.org/"&gt;Pandas&lt;/a&gt; or even Python CSV (comma separated values)
            default module, but users usually use something different from commas to separate information in
            what I like to call as GWSV (guess what separated values).
            So you need to tell user: "send me in that format or I will kill you!"...
        &lt;/p&gt;
        &lt;p&gt;
            I remember when Microsoft changed default format from XLS to XLSX. The number of
            systems crashing because people don't know that extension and
            the number of help desk problems was (and continue) huge! So why not handle sheets
            as an easy way to programmer? The better approach is using sheets, because a
            CSV sheet can be handled exactly equal to XLS or XLSX or ODS sheet.

        &lt;/p&gt;
        &lt;p&gt;
            The main difference between sheets is style (programmers hate sheet styles, but users love), but programmers
            love simple data, not styles, colors, etc. By now &lt;a target="_blank" href="https://pypi.python.org/pypi/pyheaderfile"&gt;PyHeaderFile&lt;/a&gt;
            can easily open CSV, XLS, XLSX files and convert between them (only data, no styles!). With &lt;a target="_blank" href="https://pypi.python.org/pypi/pyheaderfile"&gt;PyHeaderFile&lt;/a&gt;
            you can open even physical files or memory files and convert between them too!
        &lt;/p&gt;
        &lt;p&gt;
            The only thing that users and programmers agree is that files are easier handled
            with a header. So, if:

            &lt;pre&gt;
                Name, Date, Number

                Diogo, 1989-08-12, 7

                Vivi, 1990-05-31, 27
            &lt;/pre&gt;
            Users and programmers feel happy. If a file have a header you can handle this file with
            &lt;a target="_blank" href="https://pypi.python.org/pypi/pyheaderfile"&gt;PyHeaderFile&lt;/a&gt;!
        &lt;/p&gt;
        &lt;h3&gt;
            Why are you waiting?
        &lt;/h3&gt;
        &lt;p&gt;
            Go and use &lt;a target="_blank" href="https://pypi.python.org/pypi/pyheaderfile"&gt;PyHeaderFile&lt;/a&gt;. You can
            collaborate with the project in &lt;a target="_blank" href="https://github.com/kappius/pyheaderfile"&gt;GitHub&lt;/a&gt;.
            I hope you enjoy!
        &lt;/p&gt;
    </summary><category term="xls"></category><category term="xlsx"></category><category term="csv"></category><category term="excel"></category><category term="libreoffice"></category><category term="python"></category><category term="module"></category><category term="stylesheet"></category></entry></feed>